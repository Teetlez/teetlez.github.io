<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>LOGÆΣTHOS - GLSL</title>
    <subtitle>The official website for all things timothy</subtitle>
    <link rel="self" type="application/atom+xml" href="https://timothyclocksin.info/tags/glsl/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://timothyclocksin.info"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-01-26T00:00:00+00:00</updated>
    <id>https://timothyclocksin.info/tags/glsl/atom.xml</id>
    <entry xml:lang="en">
        <title>Ray-Tracing</title>
        <published>2023-01-26T00:00:00+00:00</published>
        <updated>2023-01-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/raytracer/"/>
        <id>https://timothyclocksin.info/projects/raytracer/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/raytracer/">&lt;p&gt;This project is a GLSL-based ray-tracer that I ported from an older OpenGL school project. While the transition posed challenges—particularly the lack of recursion in GLSL—it also provided opportunities to improve upon the original code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;interactive-demo&quot;&gt;Interactive Demo&lt;&#x2F;h2&gt;
&lt;p&gt;Explore the ray-tracer in action below:&lt;&#x2F;p&gt;
&lt;iframe width=&quot;480&quot; height=&quot;480&quot; frameborder=&quot;0&quot; src=&quot;https:&#x2F;&#x2F;www.shadertoy.com&#x2F;embed&#x2F;DllSWH?gui=true&amp;t=10&amp;paused=true&amp;muted=true&quot; allowfullscreen&gt;Ray-Tracing hlsl window&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Click &amp;amp; Drag&lt;&#x2F;strong&gt;: Move the camera around.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;project-notes&quot;&gt;Project Notes&lt;&#x2F;h2&gt;
&lt;p&gt;The lack of recursion in GLSL was a significant limitation during the conversion. However, I managed to implement iterative methods to mimic recursive behavior, resulting in a functional and improved ray-tracer.&lt;&#x2F;p&gt;
&lt;p&gt;Let me know if you’d like more details about the implementation or need help with similar projects!&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
