<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>LOGÆΣTHOS - Old Projects</title>
    <subtitle>The official website for all things timothy</subtitle>
    <link rel="self" type="application/atom+xml" href="https://timothyclocksin.info/tags/old-projects/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://timothyclocksin.info"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2016-04-16T00:00:00+00:00</updated>
    <id>https://timothyclocksin.info/tags/old-projects/atom.xml</id>
    <entry xml:lang="en">
        <title>3D Wireframe</title>
        <published>2016-04-16T00:00:00+00:00</published>
        <updated>2016-04-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/3d-wireframe/"/>
        <id>https://timothyclocksin.info/projects/3d-wireframe/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/3d-wireframe/">&lt;p&gt;This project showcases a &lt;strong&gt;3D wireframe rendering system&lt;&#x2F;strong&gt; built without the use of any external 3D libraries or functions. The purpose was to demonstrate an understanding of the fundamental processes behind rendering wireframes in 3D.&lt;&#x2F;p&gt;
&lt;script src=&quot;&#x2F;js&#x2F;processing.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;div class=&quot;card canvas-container&quot; style=&quot;align-items: center&quot;&gt;
  &lt;script
    async
    src=&quot;3DWireframe.js&quot;
    type=&quot;text&#x2F;processing&quot;
    class=&quot;embed_js_script&quot;
  &gt;&lt;&#x2F;script&gt;
  &lt;canvas class=&quot;canvas&quot;&gt;This browser doesn&#x27;t support this canvas&lt;&#x2F;canvas&gt;
  &lt;br &#x2F;&gt;
  &lt;i class=&quot;author&quot;&gt;by Timothy Clocksin&lt;&#x2F;i&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Custom Implementation&lt;&#x2F;strong&gt;: All 3D rendering logic was created from scratch.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Processing.js Environment&lt;&#x2F;strong&gt;: Built within the constraints of Processing.js, which limits flexibility for certain advanced features such as shading.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;While shading was omitted, this project highlights the foundational principles of 3D rendering.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;&#x2F;h2&gt;
&lt;p&gt;For more details on 3D rendering concepts, visit:
&lt;a href=&quot;https:&#x2F;&#x2F;www.khanacademy.org&#x2F;computing&#x2F;computer-programming&#x2F;programming-games-visualizations&#x2F;programming-3d-shapes&#x2F;a&#x2F;generating-3d-shapes&quot;&gt;Generating 3D Shapes - Khan Academy&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;↑&lt;&#x2F;kbd&gt;&#x2F;&lt;kbd&gt;↓&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Rotate vertically&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;←&lt;&#x2F;kbd&gt;&#x2F;&lt;kbd&gt;→&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Rotate horizontally&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Rotate counter-clockwise&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Rotate clockwise&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;source-code&quot;&gt;Source Code&lt;&#x2F;h2&gt;
&lt;p&gt;The full source code is available here:
&lt;a href=&quot;https:&#x2F;&#x2F;timothyclocksin.info&#x2F;projects&#x2F;3d-wireframe&#x2F;3DWireframe.js&quot;&gt;3DWireframe.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;processingjs.org&#x2F;&quot;&gt;Processing.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http:&#x2F;&#x2F;processingjs.org&#x2F;&quot;&gt;Processing.js&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;3D_rendering&quot;&gt;3D Rendering Basics&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Asteroid Escape</title>
        <published>2016-04-07T00:00:00+00:00</published>
        <updated>2016-04-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/asteroid-game/"/>
        <id>https://timothyclocksin.info/projects/asteroid-game/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/asteroid-game/">&lt;p&gt;Asteroid Escape is a straightforward game that demonstrates the use of &lt;strong&gt;mouse interaction&lt;&#x2F;strong&gt; and &lt;strong&gt;collision detection&lt;&#x2F;strong&gt; mechanics. The goal is to avoid asteroids while collecting medpacks to maintain your health.&lt;&#x2F;p&gt;
&lt;script src=&quot;&#x2F;js&#x2F;processing.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;div class=&quot;card canvas-container&quot; style=&quot;align-items: center&quot;&gt;
  &lt;script
    async
    src=&quot;AsteroidEscape.js&quot;
    type=&quot;text&#x2F;processing&quot;
    class=&quot;embed_js_script&quot;
  &gt;&lt;&#x2F;script&gt;
  &lt;canvas class=&quot;canvas&quot;&gt;This browser doesn&#x27;t support this canvas&lt;&#x2F;canvas&gt;
  &lt;br &#x2F;&gt;
  &lt;i class=&quot;author&quot;&gt;by Timothy Clocksin&lt;&#x2F;i&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Collision Mechanics&lt;&#x2F;strong&gt;: Hitting an asteroid decreases health.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Health Recovery&lt;&#x2F;strong&gt;: Collect medpacks to regain lost health.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mouse&lt;&#x2F;strong&gt;: Move the starship.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Right Click&lt;&#x2F;strong&gt;: Reset the game.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;source-code&quot;&gt;Source Code&lt;&#x2F;h2&gt;
&lt;p&gt;Download the source code for the game:
&lt;a href=&quot;https:&#x2F;&#x2F;timothyclocksin.info&#x2F;projects&#x2F;asteroid-game&#x2F;AsteroidEscape.js&quot;&gt;AsteroidEscape.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;processingjs.org&#x2F;&quot;&gt;Processing.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;additional-notes&quot;&gt;Additional Notes&lt;&#x2F;h2&gt;
&lt;p&gt;This project is a fun way to explore basic game development concepts such as collision detection, health mechanics, and mouse-based controls. If you’d like to see the game in action or modify it, check out the source code above!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Procedural Terrain</title>
        <published>2016-04-04T00:00:00+00:00</published>
        <updated>2016-04-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/terrain-generation/"/>
        <id>https://timothyclocksin.info/projects/terrain-generation/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/terrain-generation/">&lt;p&gt;This project showcases a &lt;strong&gt;non-interactive terrain generator&lt;&#x2F;strong&gt; capable of creating natural-looking environments, including &lt;strong&gt;trees&lt;&#x2F;strong&gt;, &lt;strong&gt;grass&lt;&#x2F;strong&gt;, &lt;strong&gt;mountains&lt;&#x2F;strong&gt;, &lt;strong&gt;snow&lt;&#x2F;strong&gt;, &lt;strong&gt;beaches&lt;&#x2F;strong&gt;, &lt;strong&gt;lakes&#x2F;ponds&lt;&#x2F;strong&gt;, &lt;strong&gt;clouds&lt;&#x2F;strong&gt;, and &lt;strong&gt;hills&lt;&#x2F;strong&gt;. The generator leverages &lt;strong&gt;Perlin noise&lt;&#x2F;strong&gt; for smooth, realistic transitions and an &lt;strong&gt;isometric viewpoint&lt;&#x2F;strong&gt; for a stylized aesthetic.&lt;&#x2F;p&gt;
&lt;script src=&quot;&#x2F;js&#x2F;processing.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;div class=&quot;card canvas-container&quot; style=&quot;align-items: center&quot;&gt;
  &lt;script
    async
    src=&quot;ProceduralTerrain.js&quot;
    type=&quot;text&#x2F;processing&quot;
    class=&quot;embed_js_script&quot;
  &gt;&lt;&#x2F;script&gt;
  &lt;canvas class=&quot;canvas&quot;&gt;This browser doesn&#x27;t support this canvas&lt;&#x2F;canvas&gt;
  &lt;br &#x2F;&gt;
  &lt;i class=&quot;author&quot;&gt;by Timothy Clocksin&lt;&#x2F;i&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;key-features&quot;&gt;Key Features&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Perlin Noise&lt;&#x2F;strong&gt;: Generates natural-looking terrain shapes and textures.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Isometric Viewpoint&lt;&#x2F;strong&gt;: Provides a clean and stylized perspective.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Procedural Generation&lt;&#x2F;strong&gt;: Every render is unique.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more information about the mathematics behind Perlin Noise, see the article:
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Perlin_noise&quot;&gt;en.wikipedia.org&#x2F;wiki&#x2F;Perlin_noise&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;p&gt;No controls are necessary for this generator—just enjoy the results as they appear!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;source-code&quot;&gt;Source Code&lt;&#x2F;h2&gt;
&lt;p&gt;The source code for this project can be found here:
&lt;a href=&quot;https:&#x2F;&#x2F;timothyclocksin.info&#x2F;projects&#x2F;terrain-generation&#x2F;ProceduralTerrain.js&quot;&gt;ProceduralTerrain.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;processingjs.org&#x2F;&quot;&gt;Processing.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Perlin_noise&quot;&gt;Perlin Noise on Wikipedia&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ray-Casting</title>
        <published>2016-04-03T00:00:00+00:00</published>
        <updated>2016-04-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/raycaster/"/>
        <id>https://timothyclocksin.info/projects/raycaster/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/raycaster/">&lt;p&gt;This project recreates the &lt;strong&gt;ray-casting method&lt;&#x2F;strong&gt; used in classic 3D video games such as &lt;em&gt;DOOM&lt;&#x2F;em&gt; and &lt;em&gt;Wolfenstein 3D&lt;&#x2F;em&gt;. The method involves shooting rays through a 2D array for every vertical row of pixels, where the height of the darkened “wall” is determined by the length of each ray.&lt;&#x2F;p&gt;
&lt;script src=&quot;&#x2F;js&#x2F;processing.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;div class=&quot;card canvas-container&quot; style=&quot;align-items: center&quot;&gt;
  &lt;script
    async
    src=&quot;RaycastEngine.js&quot;
    type=&quot;text&#x2F;processing&quot;
    class=&quot;embed_js_script&quot;
  &gt;&lt;&#x2F;script&gt;
  &lt;canvas class=&quot;canvas&quot;&gt;This browser doesn&#x27;t support this canvas&lt;&#x2F;canvas&gt;
  &lt;br &#x2F;&gt;
  &lt;i class=&quot;author&quot;&gt;by Timothy Clocksin&lt;&#x2F;i&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ray-casting Technique&lt;&#x2F;strong&gt;: Simulates a pseudo-3D environment by calculating wall heights based on ray distances.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Early 3D Games&lt;&#x2F;strong&gt;: Inspired by the mechanics and graphics of &lt;em&gt;DOOM&lt;&#x2F;em&gt; and &lt;em&gt;Wolfenstein 3D&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For a detailed technical explanation of the ray-casting technique, refer to &lt;a href=&quot;https:&#x2F;&#x2F;lodev.org&#x2F;cgtutor&#x2F;raycasting.html&quot;&gt;Lode Vandevenne’s tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;↑&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Move forward&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;↓&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Move backward&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;←&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Turn left&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;→&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Turn right&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;source-code&quot;&gt;Source Code&lt;&#x2F;h2&gt;
&lt;p&gt;The source code for the engine can be found here:
&lt;a href=&quot;https:&#x2F;&#x2F;timothyclocksin.info&#x2F;projects&#x2F;raycaster&#x2F;RaycastEngine.js&quot;&gt;Download RaycastEngine.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;processingjs.org&#x2F;&quot;&gt;Processing.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Doom_(1993_video_game)&quot;&gt;DOOM (1993)&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wolfenstein_3D&quot;&gt;Wolfenstein 3D&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
