<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>LOGÆΣTHOS - 3D Rendering</title>
    <subtitle>The official website for all things timothy</subtitle>
    <link rel="self" type="application/atom+xml" href="https://timothyclocksin.info/tags/3d-rendering/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://timothyclocksin.info"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-04-01T00:00:00+00:00</updated>
    <id>https://timothyclocksin.info/tags/3d-rendering/atom.xml</id>
    <entry xml:lang="en">
        <title>Path-Tracing</title>
        <published>2023-04-01T00:00:00+00:00</published>
        <updated>2023-04-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/pathtracer/"/>
        <id>https://timothyclocksin.info/projects/pathtracer/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/pathtracer/">&lt;p&gt;This project is a &lt;strong&gt;Monte Carlo path-tracer&lt;&#x2F;strong&gt; implemented in &lt;strong&gt;Rust&lt;&#x2F;strong&gt;, inspired by the book &lt;em&gt;Raytracing in One Weekend&lt;&#x2F;em&gt;. The primary goal was to enhance my understanding of both &lt;strong&gt;rendering techniques&lt;&#x2F;strong&gt; and &lt;strong&gt;Rust programming&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;key-features&quot;&gt;Key Features&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rust Implementation&lt;&#x2F;strong&gt;: Developed entirely in Rust for performance and safety.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Monte Carlo Path-Tracing&lt;&#x2F;strong&gt;: Realistic light simulation through randomized sampling.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Custom Scenes&lt;&#x2F;strong&gt;: Flexible scene input allows users to tailor rendering setups.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gallery&quot;&gt;Gallery&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rendered-images&quot;&gt;Rendered Images&lt;&#x2F;h3&gt;
&lt;p&gt;Click an image to view it in full size.&lt;&#x2F;p&gt;
&lt;div class=&quot;photo-gallery&quot;&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;1678228930342.avif&quot;&gt;
            &lt;img src=&quot;1678228930342.avif&quot; alt=&quot;Gallery Image 1&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;1678232201587.avif&quot;&gt;
            &lt;img src=&quot;1678232201587.avif&quot; alt=&quot;Gallery Image 2&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;Cornell.avif&quot;&gt;
            &lt;img src=&quot;Cornell.avif&quot; alt=&quot;Gallery Image 3&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;NightLight.avif&quot;&gt;
            &lt;img src=&quot;NightLight.avif&quot; alt=&quot;Gallery Image 4&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;OneWeekend.avif&quot;&gt;
            &lt;img src=&quot;OneWeekend.avif&quot; alt=&quot;Gallery Image 5&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;OneWeekend2.avif&quot;&gt;
            &lt;img src=&quot;OneWeekend2.avif&quot; alt=&quot;Gallery Image 6&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;OneWeekend3.avif&quot;&gt;
            &lt;img src=&quot;OneWeekend3.avif&quot; alt=&quot;Gallery Image 7&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;OneWeekend4.avif&quot;&gt;
            &lt;img src=&quot;OneWeekend4.avif&quot; alt=&quot;Gallery Image 8&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;Studio.avif&quot;&gt;
            &lt;img src=&quot;Studio.avif&quot; alt=&quot;Gallery Image 9&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;div class=&quot;photo-item&quot;&gt;
        &lt;a href=&quot;Teaset3.avif&quot;&gt;
            &lt;img src=&quot;Teaset3.avif&quot; alt=&quot;Gallery Image 10&quot; loading=&quot;lazy&quot; class=&quot;full&quot; &#x2F;&gt;
        &lt;&#x2F;a&gt;
    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;
&lt;style&gt;
    .photo-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin: 2rem 0;
    }

    .photo-item img {
        width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .photo-item img:hover {
        transform: scale(1.05);
    }
&lt;&#x2F;style&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h2&gt;
&lt;p&gt;To run the path-tracer, use the following command-line options:&lt;&#x2F;p&gt;
&lt;div class=&quot;crt scanlines&quot; aria-hidden=&quot;true&quot;&gt;
	&lt;div class=&quot;container&quot; style=&quot;text-align: center&quot;&gt;
&lt;pre class=&quot;asciiart&quot; style=&quot;display: inline-block; text-align: left&quot;&gt;
&lt;p&gt;rust_raytracer.exe [OPTIONS] [SCENE]&lt;&#x2F;p&gt;
&lt;p&gt;Arguments:
[SCENE] Scene file to use&lt;&#x2F;p&gt;
&lt;p&gt;Options:
-s, –samples [SAMPLES] Number of samples per pixel [default: 128]
-p, –passes [PASSES] Number of frames to cumulate [default: 64]
-b, –bounces [BOUNCES] Max number of times a ray can bounce [default: 8]
–width [WIDTH] Pixel width of frame [default: 640]
–height [HEIGHT] Pixel height of frame [default: 480]
-g, –gamma [GAMMA] Gamma level [default: 2.2]
-l, –light-clamp [LIGHT_CLAMP] Max light brightness [default: inf]
-f, –filter Apply bilateral filter after render to reduce noise
-h, –help Print help
-V, –version Print version&lt;&#x2F;p&gt;
&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ray-Tracing</title>
        <published>2023-01-26T00:00:00+00:00</published>
        <updated>2023-01-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/raytracer/"/>
        <id>https://timothyclocksin.info/projects/raytracer/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/raytracer/">&lt;p&gt;This project is a GLSL-based ray-tracer that I ported from an older OpenGL school project. While the transition posed challenges—particularly the lack of recursion in GLSL—it also provided opportunities to improve upon the original code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;interactive-demo&quot;&gt;Interactive Demo&lt;&#x2F;h2&gt;
&lt;p&gt;Explore the ray-tracer in action below:&lt;&#x2F;p&gt;
&lt;iframe width=&quot;480&quot; height=&quot;480&quot; frameborder=&quot;0&quot; src=&quot;https:&#x2F;&#x2F;www.shadertoy.com&#x2F;embed&#x2F;DllSWH?gui=true&amp;t=10&amp;paused=true&amp;muted=true&quot; allowfullscreen&gt;Ray-Tracing hlsl window&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Click &amp;amp; Drag&lt;&#x2F;strong&gt;: Move the camera around.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;project-notes&quot;&gt;Project Notes&lt;&#x2F;h2&gt;
&lt;p&gt;The lack of recursion in GLSL was a significant limitation during the conversion. However, I managed to implement iterative methods to mimic recursive behavior, resulting in a functional and improved ray-tracer.&lt;&#x2F;p&gt;
&lt;p&gt;Let me know if you’d like more details about the implementation or need help with similar projects!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Ray-Casting</title>
        <published>2016-04-03T00:00:00+00:00</published>
        <updated>2016-04-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://timothyclocksin.info/projects/raycaster/"/>
        <id>https://timothyclocksin.info/projects/raycaster/</id>
        
        <content type="html" xml:base="https://timothyclocksin.info/projects/raycaster/">&lt;p&gt;This project recreates the &lt;strong&gt;ray-casting method&lt;&#x2F;strong&gt; used in classic 3D video games such as &lt;em&gt;DOOM&lt;&#x2F;em&gt; and &lt;em&gt;Wolfenstein 3D&lt;&#x2F;em&gt;. The method involves shooting rays through a 2D array for every vertical row of pixels, where the height of the darkened “wall” is determined by the length of each ray.&lt;&#x2F;p&gt;
&lt;script src=&quot;&#x2F;js&#x2F;processing.min.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;div class=&quot;card canvas-container&quot; style=&quot;align-items: center&quot;&gt;
  &lt;script
    async
    src=&quot;RaycastEngine.js&quot;
    type=&quot;text&#x2F;processing&quot;
    class=&quot;embed_js_script&quot;
  &gt;&lt;&#x2F;script&gt;
  &lt;canvas class=&quot;canvas&quot;&gt;This browser doesn&#x27;t support this canvas&lt;&#x2F;canvas&gt;
  &lt;br &#x2F;&gt;
  &lt;i class=&quot;author&quot;&gt;by Timothy Clocksin&lt;&#x2F;i&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Ray-casting Technique&lt;&#x2F;strong&gt;: Simulates a pseudo-3D environment by calculating wall heights based on ray distances.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Early 3D Games&lt;&#x2F;strong&gt;: Inspired by the mechanics and graphics of &lt;em&gt;DOOM&lt;&#x2F;em&gt; and &lt;em&gt;Wolfenstein 3D&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For a detailed technical explanation of the ray-casting technique, refer to &lt;a href=&quot;https:&#x2F;&#x2F;lodev.org&#x2F;cgtutor&#x2F;raycasting.html&quot;&gt;Lode Vandevenne’s tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;controls&quot;&gt;Controls&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;↑&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Move forward&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;↓&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Move backward&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;←&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Turn left&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;kbd&gt;→&lt;&#x2F;kbd&gt;&lt;&#x2F;strong&gt;: Turn right&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;source-code&quot;&gt;Source Code&lt;&#x2F;h2&gt;
&lt;p&gt;The source code for the engine can be found here:
&lt;a href=&quot;https:&#x2F;&#x2F;timothyclocksin.info&#x2F;projects&#x2F;raycaster&#x2F;RaycastEngine.js&quot;&gt;Download RaycastEngine.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;processingjs.org&#x2F;&quot;&gt;Processing.js&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Doom_(1993_video_game)&quot;&gt;DOOM (1993)&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Wolfenstein_3D&quot;&gt;Wolfenstein 3D&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
